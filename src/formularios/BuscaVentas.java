/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formularios;

import DAO.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.*;


/**
 *
 * @author Jarol
 */
public class BuscaVentas extends javax.swing.JPanel {

                public IClientesDAO clientesDAO=new ClientesDAO();
                public IVentasDAO ventasDAO= new VentasDAO();
                 public IProductosDAO productosDAO=new ProductosDAO();
                 public IRefProductoventas refProductosDAO= new RefProductoVentasDAO();
                DefaultTableModel modelo;
            DefaultTableModel modelo2;
    /**
     * Creates new form Cliente
     */
    public BuscaVentas() {
        initComponents();
        llenarComboBoxCliente();
        // Tabla productos
        modelo = new DefaultTableModel();
        modelo.addColumn("IdProducto");
        modelo.addColumn("Nombre");
        modelo.addColumn("Precio Actual");
        modelo.addColumn("Cantidad");
       modelo.addColumn("MontoTotal");
        this.tblProductos.setModel(modelo);
        
        // Tabla ventas
        modelo2=new DefaultTableModel();
        modelo2.addColumn("IdVenta");
        modelo2.addColumn("Descuento");
        modelo2.addColumn("Fecha");
        modelo2.addColumn("MontoTotal");
        modelo2.addColumn("IdCliente");
        this.tblVentas.setModel( modelo2);
        
         consultarTodasVentas();
           datePicker2.setDateToToday();
            datePicker1.setDateToToday();
            
            txtIdCliente.setEditable(false);
            txtDescuento.setEditable(false);
            txtIdVenta.setEditable(false);
            txtTotal.setEditable(false);
            txtFecha.setEditable(false);
      
    }

    
     public void llenarComboBoxCliente()
      {
           List<Cliente> list=clientesDAO.consultarTodos();
          for(Cliente c:list){
          comboBoxCliente.addItem(c.toString());
        }
      }
     
  
     
     public void consultarTodasVentas()
     {
         List<Venta> list=ventasDAO.consultarTodos();
        DefaultTableModel model= (DefaultTableModel) tblVentas.getModel();
        int rowCount = model.getRowCount();
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
          model.removeRow(i);
        }
        Object rowData[]=new Object[5];
        for(int i=0; i<list.size();i++){
            rowData[0]=list.get(i).getIdVenta();
            rowData[1]=list.get(i).getDescuento();
            // Dar formato a la fecha
            SimpleDateFormat formater= new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
            rowData[2]=formater.format(list.get(i).getFecha());
            rowData[3]=list.get(i).getMontoTotal();
             rowData[4]=list.get(i).getIdCliente();
            model.addRow(rowData);
            
          
        }
     }
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblVentas = new javax.swing.JTable();
        btnBuscar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        comboBoxCliente = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        txtFecha = new javax.swing.JTextField();
        txtIdCliente = new javax.swing.JTextField();
        txtDescuento = new javax.swing.JTextField();
        txtIdVenta = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblProductos = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        datePicker1 = new com.github.lgooddatepicker.components.DatePicker();
        datePicker2 = new com.github.lgooddatepicker.components.DatePicker();
        botonConsultarTodas = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txtSubtotal = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(900, 597));

        jLabel1.setText("Cliente:");

        jLabel3.setText("Fecha:");

        tblVentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblVentas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblVentasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblVentas);

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jLabel7.setText("Buscar Ventas");
        jLabel7.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N

        jLabel2.setText("Detalles de Venta");
        jLabel2.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N

        jLabel4.setText("ID");

        jLabel5.setText("Descuento");

        jLabel6.setText("Fecha");

        jLabel8.setText("Total");

        jLabel9.setText("Cliente");

        tblProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblProductos);

        jLabel10.setText("Productos");
        jLabel10.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N

        botonConsultarTodas.setText("Consultar todas");
        botonConsultarTodas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsultarTodasActionPerformed(evt);
            }
        });

        txtSubtotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSubtotalActionPerformed(evt);
            }
        });

        jLabel12.setText("Subtotal");

        jLabel13.setText("ID Cliente");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(59, 59, 59)
                                    .addComponent(btnBuscar)
                                    .addGap(62, 62, 62)
                                    .addComponent(btnCancelar)
                                    .addGap(49, 49, 49)
                                    .addComponent(botonConsultarTodas))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 334, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel11)
                                            .addComponent(jLabel9))
                                        .addGap(115, 115, 115))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(datePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(datePicker2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(61, 61, 61))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(60, 60, 60))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(comboBoxCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(242, 242, 242)))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(jLabel12)
                            .addComponent(jLabel8)
                            .addComponent(jLabel5)
                            .addComponent(jLabel13))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtIdVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(508, 508, 508))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 533, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addGap(552, 552, 552))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(datePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(datePicker2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBuscar)
                            .addComponent(btnCancelar)
                            .addComponent(botonConsultarTodas)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel2))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(comboBoxCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtIdVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addComponent(jLabel11))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtSubtotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12))
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtDescuento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtIdCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel13))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 38, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
           try {
                        if(fechaFutura()==true)
                        {
                            JOptionPane.showMessageDialog(null, "Selecciono fecha futura");
                              datePicker2.setDateToToday();
                              datePicker1.setDateToToday();
                            
                        }  else
                        {
                            consultarVentasFecha();
                        }
           
           } catch (ParseException ex) {
                        Logger.getLogger(BuscaVentas.class.getName()).log(Level.SEVERE, null, ex);
                    }
    }//GEN-LAST:event_btnBuscarActionPerformed

    public void consultarVentasFecha()
    {
        String fechaInicio = datePicker1.getDate().format(DateTimeFormatter.ofPattern("yyyy/MM/dd"));
String fechaFinal = datePicker2.getDate().format(DateTimeFormatter.ofPattern("yyyy/MM/dd"));
  String idCliente= comboBoxCliente.getSelectedItem().toString();

        
        List<Venta> list=ventasDAO.consultarPorFecha(fechaInicio,fechaFinal,idCliente);
       /*   List<Venta> list2 = new ArrayList<>();
        int id=Integer.parseInt(idCliente);
        for(int n=0;n<list.size();n++)
        {
            Cliente cliente=list.get(n).getIdCliente();
            if( cliente.getIdCliente()==id)
            {
                list2.add(list.get(n));
            }
        }
*/
        
          DefaultTableModel model= (DefaultTableModel) tblVentas.getModel();
        int rowCount = model.getRowCount();
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
          model.removeRow(i);
        }
        Object rowData[]=new Object[5];
     
        if(list.size()>0)
        {
        for(int i=0; i<list.size();i++){
            rowData[0]=list.get(i).getIdVenta();
            rowData[1]=list.get(i).getDescuento();
            // Dar formato a la fecha
            SimpleDateFormat formater= new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
            rowData[2]=formater.format(list.get(i).getFecha());
            rowData[3]=list.get(i).getMontoTotal();
             rowData[4]=list.get(i).getIdCliente();
            model.addRow(rowData);
        }
        }else
        {
            JOptionPane.showMessageDialog(null, "No hay coincidencias");
            
        }
        
                
    }
    
    
    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
       
            datePicker2.setDateToToday();
            datePicker1.setDateToToday();
            
               txtIdCliente.setText("");
        txtIdVenta.setText("");
        txtDescuento.setText("");
        txtFecha.setText("");
        txtTotal.setText("");
        txtSubtotal.setText("");
        
        consultarTodasVentas();
        
        DefaultTableModel model= (DefaultTableModel) tblProductos.getModel();
        int rowCount = model.getRowCount();
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
          model.removeRow(i);
        }
            
            
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void tblVentasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblVentasMouseClicked
    
          DefaultTableModel model= (DefaultTableModel) tblVentas.getModel();
        String idVenta=model.getValueAt(tblVentas.getSelectedRow(), 0).toString();
        String descuento=model.getValueAt(tblVentas.getSelectedRow(), 1).toString();
        String Fecha=model.getValueAt(tblVentas.getSelectedRow(), 2).toString();
        String montoTotal=model.getValueAt(tblVentas.getSelectedRow(), 3).toString();
              String idCliente=model.getValueAt(tblVentas.getSelectedRow(), 4).toString();
        txtIdCliente.setText(idCliente);
        txtIdVenta.setText(idVenta);
        txtDescuento.setText(descuento);
        txtFecha.setText(Fecha);
        txtTotal.setText(montoTotal);
      float desc=   Float.valueOf(descuento);
     float tot=Float.valueOf(montoTotal);
     float suma= desc+tot;
     
        txtSubtotal.setText(String.valueOf(suma));
        llenarTablaProductos();
    }//GEN-LAST:event_tblVentasMouseClicked
   public void llenarTablaProductos()
     {
         Venta venta= new Venta();
        venta.setIdVenta(Integer.parseInt(txtIdVenta.getText()));
        
        // lista de refproductosventas
        List<RefProductoventas> listap=refProductosDAO.consultarTodos();

              List<RefProductoventas> listaR=new ArrayList<>();
         
          for(int i=0;i<listap.size();i++)
          {
              if(listap.get(i).getIdVenta().getIdVenta()==venta.getIdVenta())
              {
                  listaR.add(listap.get(i));
                  
              }
          }
          
                List<Producto> listaFinalProducto=new ArrayList<>();
       List<Producto> lista=productosDAO.consultarProductosVenta(venta);
           for(int i=0;i<listaR.size();i++)
          {
              for(int n=0;n<lista.size();n++)
              {
              if(listaR.get(i).getIdProducto().getIdProducto()==lista.get(n).getIdProducto())
              {
                  listaFinalProducto.add(lista.get(n));
                  
              }
              }
          }
         // List<RefProductoventas> lista=refProductosDAO.consultarRefProductosVenta(venta);
          
        DefaultTableModel model= (DefaultTableModel) tblProductos.getModel();
        int rowCount = model.getRowCount();
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
          model.removeRow(i);
        }
        if(lista.size()>0)
        {
        Object rowData[]=new Object[5];
        for(int i=0; i<listaR.size();i++){
       
         
                    rowData[0]=  listaFinalProducto.get(i).getIdProducto();
            rowData[1]=  listaFinalProducto.get(i).getNombre();
            rowData[2]=  listaFinalProducto.get(i).getPrecioActual();
            rowData[3]=listaR.get(i).getCantidad();
            rowData[4]=listaR.get(i).getImporte();
            model.addRow(rowData);
        }
        }else
        {
            JOptionPane.showMessageDialog(null, "La venta no tiene productos");
        }
     }

    
    private void botonConsultarTodasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsultarTodasActionPerformed
        consultarTodasVentas();
    }//GEN-LAST:event_botonConsultarTodasActionPerformed

    private void txtSubtotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSubtotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSubtotalActionPerformed

    
    public boolean fechaFutura() throws ParseException
    {
     Date fechaactual = new Date(System.currentTimeMillis());
String fechaInicio = datePicker1.getDate().format(DateTimeFormatter.ofPattern("yyyy-MM-dd"));
String fechaFinal = datePicker2.getDate().format(DateTimeFormatter.ofPattern("yyyy-MM-dd"));
SimpleDateFormat date = new SimpleDateFormat("yyyy-MM-dd");
Date fechaInicioDate = date.parse(fechaInicio);  //String a date
Date fechaFinalDate = date.parse(fechaFinal);  //String a date

 //comprueba si es que inicio esta después que fecha actual       
if(fechaInicioDate.after(fechaactual)|| fechaFinalDate.after(fechaactual)){
    return true;
}else{
    return false;
}
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonConsultarTodas;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JComboBox<String> comboBoxCliente;
    private com.github.lgooddatepicker.components.DatePicker datePicker1;
    private com.github.lgooddatepicker.components.DatePicker datePicker2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblProductos;
    private javax.swing.JTable tblVentas;
    private javax.swing.JTextField txtDescuento;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtIdCliente;
    private javax.swing.JTextField txtIdVenta;
    private javax.swing.JTextField txtSubtotal;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
